# Generated by Django 4.2.7 on 2025-10-01 06:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('movies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('trending', 'Trending'), ('popular', 'Popular'), ('similar', 'Similar Movies'), ('genre_based', 'Genre Based'), ('collaborative', 'Collaborative Filtering'), ('content_based', 'Content Based')], help_text='Type of recommendation algorithm used', max_length=20)),
                ('score', models.FloatField(default=0.0, help_text='Recommendation score/confidence')),
                ('reason', models.CharField(blank=True, help_text='Human-readable reason for recommendation', max_length=200)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for the recommendation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this recommendation expires', null=True)),
            ],
            options={
                'verbose_name': 'Recommendation',
                'verbose_name_plural': 'Recommendations',
                'db_table': 'recommendations',
                'ordering': ['-score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecommendationCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(max_length=200, unique=True)),
                ('cache_type', models.CharField(choices=[('trending', 'Trending Movies'), ('popular', 'Popular Movies'), ('genre_cache', 'Genre-based Cache'), ('user_cache', 'User-specific Cache')], max_length=20)),
                ('data', models.JSONField(help_text='Cached recommendation data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Recommendation Cache',
                'verbose_name_plural': 'Recommendation Caches',
                'db_table': 'recommendation_cache',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('view', 'View'), ('favorite', 'Favorite'), ('rating', 'Rating'), ('watchlist', 'Add to Watchlist'), ('search', 'Search'), ('click', 'Click')], max_length=20)),
                ('value', models.FloatField(blank=True, help_text='Numeric value for rating or other interactions', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional interaction metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='movies.movie')),
            ],
            options={
                'verbose_name': 'User Interaction',
                'verbose_name_plural': 'User Interactions',
                'db_table': 'user_interactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
